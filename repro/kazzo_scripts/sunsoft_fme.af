board <- {
     mappernum = 69, vram_mirrorfind = false, ppu_ramfind = false,
     cpu_rom = {
         size_base = 2 * mega, size_max = 2 * mega,
         banksize = 0x2000
     },
    cpu_ram = {
        size_base = 0x2000, size_max = 0x2000, 
        banksize = 0x2000
    },
   ppu_rom = {
       size_base = 2 * mega, size_max = 2 *mega,
       banksize = 0x0400
    }
};
function sunsoft5_write(d, register_address, data)
{
     cpu_write(d, 0x8000, register_address);
     cpu_write(d, 0xa000, data);
}
function cpu_ram_access(d, pagesize, banksize)
{
     sunsoft5_write(d, 8, 0xc0);
     cpu_ramrw(d, 0x6000, banksize);
     cpu_write(d, 0xa000, 0x00);
}

function program_initalize(d, cpu_banksize, ppu_banksize)
{
// SVN
 sunsoft5_write(d, 8, 0xC0); // enable W-RAM   0x40->0xc0
 cpu_command(d, 0x2aaa, 0xe000, cpu_banksize);
 cpu_command(d, 0x5555, 0xe000, cpu_banksize);
 sunsoft5_write(d, 0xa,1);
 sunsoft5_write(d, 0xb,2);
 ppu_command(d, 0x2aaa, 0x1000, ppu_banksize);
 ppu_command(d, 0x5555, 0x1400, ppu_banksize);
 ppu_command(d, 0x0000, 0x1800, ppu_banksize);
 sunsoft5_write(d, 4, 0x0a);
 sunsoft5_write(d, 5, 0x15);
 sunsoft5_write(d, 6, 0);

}

function cpu_dump(d, pagesize, banksize)
{
     for(local i = 0; i < pagesize - 1; i++){
          sunsoft5_write(d, 9, i);
          cpu_read(d, 0x8000, banksize);
      }
      cpu_read(d, 0xe000, banksize);
}
 
function ppu_dump(d, pagesize, banksize)
{
    local mul = 8;
    for(local i = 0; i < pagesize; i+= mul){
         for(local j = 0; j < mul; j++){
             sunsoft5_write(d, j, i + j);
         }
         ppu_read(d, 0, banksize * mul);
     }
}
 
function cpu_transfer(d, start, end, cpu_banksize)
{
     for(local i = start; i < end - 1; i += 1){
          cpu_write(d, 0x8000, 0x0b);
          cpu_write(d, 0xa000, i);
          cpu_program(d, 0xc000, cpu_banksize);
     }
     cpu_program(d, 0xe000, cpu_banksize)
}
function ppu_transfer(d, start, end, ppu_banksize)
{
     // ---------------------------------------------------
     local mul = 8;
     for(local i = start; i < end; i+= mul){
          for(local j = 0; j < mul; j++){
              sunsoft5_write(d, j, i + j);
         }
         ppu_program(d, 0, ppu_banksize * mul);
     }
     // ---------------------------------------------------
    /* 
     for(local i = start; i < end; i += 4){
         cpu_write(d, 0x8000, 4);
         cpu_write(d, 0xa000, i);
         cpu_write(d, 0x8000, 5);
         cpu_write(d, 0xa000, i | 1);
         cpu_write(d, 0x8000, 6);
         cpu_write(d, 0xa000, i | 2);
         cpu_write(d, 0x8000, 7);
         cpu_write(d, 0xa000, i | 3);
         ppu_program(d, 0x1000, ppu_banksize * 4);
     }
     */
}